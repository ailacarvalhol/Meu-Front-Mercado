{"ast":null,"code":"var _jsxFileName = \"/Users/ketlentsampaio/Downloads/my-app/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageCard({\n  item\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  function AddItemToCard(e) {\n    items.push(...items, e);\n    // localStorage.setItem('products', JSON.stringify(e));\n    if (localStorage.getItem('items') === null) {\n      // Adicionando um array com um objeto no localstorage\n      localStorage.setItem('items', JSON.stringify([e]));\n    } else {\n      // Copiando o array existente no localstorage e adicionando o novo objeto ao final.\n      localStorage.setItem('items',\n      // O JSON.parse transforma a string em JSON novamente, o inverso do JSON.strigify\n      JSON.stringify([...JSON.parse(localStorage.getItem('items')), e]));\n    }\n  }\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: \"100%\",\n      borderRadius: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"150\",\n        image: item.image,\n        alt: \"Product Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        noWrap: true,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        children: [\"R$ \", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        sx: {\n          width: \"25%\",\n          borderRadius: 10,\n          backgroundColor: \"#7FBA00\"\n        },\n        onClick: () => AddItemToCard(item),\n        children: \"Comprar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCard, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = ImageCard;\nvar _c;\n$RefreshReg$(_c, \"ImageCard\");","map":{"version":3,"names":["React","useState","Card","CardActions","CardContent","CardMedia","Typography","Button","IconButton","jsxDEV","_jsxDEV","ImageCard","item","_s","items","setItems","AddItemToCard","e","push","localStorage","getItem","setItem","JSON","stringify","parse","console","log","sx","width","borderRadius","children","textAlign","component","height","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","noWrap","name","fontSize","price","justifyContent","variant","color","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/ketlentsampaio/Downloads/my-app/src/components/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button, IconButton } from \"@mui/material\";\n\nexport default function ImageCard({ item }) {\n  const [items, setItems] = useState([])\n\n  function AddItemToCard(e) {\n    items.push(...items, e)\n    // localStorage.setItem('products', JSON.stringify(e));\n    if (localStorage.getItem('items') === null) {\n      // Adicionando um array com um objeto no localstorage\n      localStorage.setItem('items', JSON.stringify([e]));\n    } else {\n      // Copiando o array existente no localstorage e adicionando o novo objeto ao final.\n      localStorage.setItem(\n        'items',\n        // O JSON.parse transforma a string em JSON novamente, o inverso do JSON.strigify\n        JSON.stringify([\n          ...JSON.parse(localStorage.getItem('items')),\n          e\n        ])\n      );\n    }\n  }\n  console.log(items)\n  return (\n    <Card sx={{ width: \"100%\", borderRadius: 5 }}>\n      <CardContent sx={{ textAlign: \"center\" }}>\n        <CardMedia\n          component=\"img\"\n          height=\"150\"\n          image={item.image}\n          alt=\"Product Image\"\n        />\n        <Typography   noWrap>\n          {item.name}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} >\n          R$ {item.price}\n        </Typography>\n      </CardContent>\n      <CardActions sx={{ justifyContent: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          sx={{ width: \"25%\", borderRadius: 10, backgroundColor: \"#7FBA00\" }}\n          onClick={() => AddItemToCard(item)}\n        >\n          Comprar\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASe,aAAaA,CAACC,CAAC,EAAE;IACxBH,KAAK,CAACI,IAAI,CAAC,GAAGJ,KAAK,EAAEG,CAAC,CAAC;IACvB;IACA,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;MAC1C;MACAD,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,CAACN,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACL;MACAE,YAAY,CAACE,OAAO,CAClB,OAAO;MACP;MACAC,IAAI,CAACC,SAAS,CAAC,CACb,GAAGD,IAAI,CAACE,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAC5CH,CAAC,CACF,CACH,CAAC;IACH;EACF;EACAQ,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB,oBACEJ,OAAA,CAACR,IAAI;IAACyB,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC3CpB,OAAA,CAACN,WAAW;MAACuB,EAAE,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,gBACvCpB,OAAA,CAACL,SAAS;QACR2B,SAAS,EAAC,KAAK;QACfC,MAAM,EAAC,KAAK;QACZC,KAAK,EAAEtB,IAAI,CAACsB,KAAM;QAClBC,GAAG,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACF7B,OAAA,CAACJ,UAAU;QAAGkC,MAAM;QAAAV,QAAA,EACjBlB,IAAI,CAAC6B;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACb7B,OAAA,CAACJ,UAAU;QAACqB,EAAE,EAAE;UAAEe,QAAQ,EAAE;QAAG,CAAE;QAAAZ,QAAA,GAAE,KAC9B,EAAClB,IAAI,CAAC+B,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACd7B,OAAA,CAACP,WAAW;MAACwB,EAAE,EAAE;QAAEiB,cAAc,EAAE;MAAS,CAAE;MAAAd,QAAA,eAC5CpB,OAAA,CAACH,MAAM;QACLsC,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,SAAS;QACfnB,EAAE,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,YAAY,EAAE,EAAE;UAAEkB,eAAe,EAAE;QAAU,CAAE;QACnEC,OAAO,EAAEA,CAAA,KAAMhC,aAAa,CAACJ,IAAI,CAAE;QAAAkB,QAAA,EACpC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAAC1B,EAAA,CAlDuBF,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}