{"ast":null,"code":"var _jsxFileName = \"/Users/ketlentsampaio/Downloads/my-app/src/components/TableCart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TableComponentCart() {\n  _s();\n  const [rows, setRow] = useState([]);\n  const [itemCount, setItemCount] = React.useState(1);\n  const [items, setItems] = useState([]);\n  const header = [\"Item\", \"Quantidade\", \"Total\", \"\"];\n  useEffect(() => {\n    setRow(JSON.parse(localStorage.getItem('products')));\n  }, []);\n  function updateCard(e) {\n    items.push(...items, {\n      id: e.id,\n      name: e.name,\n      price: e.price,\n      qtd: e.qtd + 1,\n      image: e.image\n    });\n    // localStorage.setItem('products', JSON.stringify(e));\n    if (localStorage.getItem('products') === null) {\n      // Adicionando um array com um objeto no localstorage\n      localStorage.setItem('products', JSON.stringify([e]));\n    } else {\n      // Copiando o array existente no localstorage e adicionando o novo objeto ao final.\n      localStorage.setItem('products',\n      // O JSON.parse transforma a string em JSON novamente, o inverso do JSON.strigify\n      JSON.stringify([...JSON.parse(localStorage.getItem('products')), e]));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: \"90vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: header.map((item, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: item\n            }, index + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows === null || rows === void 0 ? void 0 : rows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: () => updateCard(row.qtd),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), row.qtd, /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: () => {\n                  setItemCount(row.qtd + 1);\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: itemCount * row.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, index + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TableComponentCart, \"/aJPPyeuwrmbZoxhXYzqRL0QGkM=\");\n_c = TableComponentCart;\nvar _c;\n$RefreshReg$(_c, \"TableComponentCart\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","TableComponentCart","_s","rows","setRow","itemCount","setItemCount","items","setItems","header","JSON","parse","localStorage","getItem","updateCard","e","push","id","name","price","qtd","image","setItem","stringify","children","component","sx","minWidth","map","item","index","align","fileName","_jsxFileName","lineNumber","columnNumber","row","variant","size","onClick","_c","$RefreshReg$"],"sources":["/Users/ketlentsampaio/Downloads/my-app/src/components/TableCart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Button } from \"@mui/material\";\n\n\nexport default function TableComponentCart() {\n  const [rows, setRow] = useState([]);\n  const [itemCount, setItemCount] = React.useState(1)\n  const [items, setItems] = useState([])\n  const header = [\"Item\", \"Quantidade\", \"Total\", \"\"];\n\n\n  useEffect(() => {\n    setRow(JSON.parse((localStorage.getItem('products'))))\n  }, [])\n\n  function updateCard(e) {\n    items.push(...items,\n      {\n        id: e.id,\n        name: e.name,\n        price: e.price,\n        qtd: e.qtd +1,\n        image: e.image\n      },\n    )\n    // localStorage.setItem('products', JSON.stringify(e));\n    if (localStorage.getItem('products') === null) {\n      // Adicionando um array com um objeto no localstorage\n      localStorage.setItem('products', JSON.stringify([e]));\n    } else {\n      // Copiando o array existente no localstorage e adicionando o novo objeto ao final.\n      localStorage.setItem(\n        'products',\n        // O JSON.parse transforma a string em JSON novamente, o inverso do JSON.strigify\n        JSON.stringify([\n          ...JSON.parse(localStorage.getItem('products')),\n          e\n        ])\n      );\n    }\n  }\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: \"90vw\" }}>\n          <TableHead>\n            <TableRow>\n              {header.map((item, index) => (\n                <TableCell key={index + 1} align=\"right\">{item}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.map((row, index) => (\n              <TableRow key={index + 1}>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                < TableCell align=\"right\">\n                  <Button variant=\"outlined\" size=\"small\" onClick={() => updateCard(row.qtd)}>\n                    -\n                  </Button>\n                  {row.qtd}\n                  <Button variant=\"outlined\" size=\"small\" onClick={() => {\n                    setItemCount(row.qtd + 1);\n                  }}>\n                    +\n                  </Button>\n                </TableCell>\n                <TableCell align=\"right\">{itemCount * row.price}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer >\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}